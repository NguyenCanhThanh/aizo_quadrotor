<launch>
  <arg name="world" default="levine" />
  <arg name="gazebo_gui" default="true"/>
  <arg name="uav_name" default="quadrotor" />
  <arg name="uav_type" default="hummingbird" />
  <arg name="sim" default="1"/>
  <arg name="mass" default="0.5"/>
  <arg name="world_frame_id" default="simulator"/>
  <arg name="nodelet_manager_name" default="nodelet_manager_control"/>

  <arg name="odom" default="ground_truth/odom"/> 
  <arg name="world_frame" default="map" />
  <arg name="robot_frame" default="$(arg uav_name)/base_link" />

  <arg name="initial_position/x" default="0.0"/>
  <arg name="initial_position/y" default="0.0"/>
  <arg name="initial_position/z" default="0.0"/>
  <arg name="color/r" default="0.0"/>
  <arg name="color/g" default="0.0"/>
  <arg name="color/b" default="1.0"/>
  <arg name="color/a" default="0.7"/>
 
  <!-- RViz -->
  <include file="$(find aizo_quadrotor_launch)/launch/rviz.launch" >
  </include> 

  <!-- Gazebo -->
  <include file="$(find aizo_quadrotor_launch)/launch/gazebo.launch" >
    <arg name="world" value="$(arg world)"/>
    <arg name="gui" value="$(arg gazebo_gui)" />
  </include>

  <!-- </group ns="$(arg uav_name)" > -->
    <!-- <node pkg="aizo_quadrotor_utils" type="change_header" name="change_header" output="screen">
      <remap from="~odom_in" to="$(arg odom)" />
      <remap from="~odom_out" to="raw_odom"/>
      <param name="robot_frame" value="$(arg robot_frame)"/>
      <param name="world_frame" value="$(arg world_frame)"/>
      <remap/>
    </node>

    <node pkg="aizo_quadrotor_utils" type="change_odom" name="chang_odom">
      <remap from="~odom_in" to="raw_odom"/>
      <remap from="~odom_out" to="odom"/>
      <param name="dt_thr" value="0.5"/>
    </node> -->
  <!-- </group> -->

  <!-- Spawn robot -->
  <include file="$(find aizo_quadrotor_launch)/launch/spawn_robot.launch" >
  </include>

  <!-- Controller UAV -->
  <include file="$(find aizo_quadrotor_launch)/launch/controller.launch" >
    <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)" />
    <arg name="mass" value="$(arg mass)" />
    <arg name="uav_name" value="$(arg uav_name)" />
    <arg name="uav_type" value="$(arg uav_type)" />
    <arg name="odom_topic" value="odom" />
  </include> 

  

  <group ns="$(arg uav_name)">
    <node pkg="aizo_quadrotor_utils" type="change_header" name="change_header" output="screen">
      <remap from="~odom_in" to="$(arg odom)" />
      <remap from="~odom_out" to="raw_odom"/>
      <param name="robot_frame" value="$(arg robot_frame)"/>
      <param name="world_frame" value="$(arg world_frame)"/>
    </node>

    <node pkg="aizo_quadrotor_utils" type="change_odom" name="chang_odom">
      <remap from="~odom_in" to="raw_odom"/>
      <remap from="~odom_out" to="odom"/>
      <param name="dt_thr" value="0.5"/>
    </node>

    <!-- Simulator (change odom topic from pub to sub)-->
    <!-- <include file="$(find aizo_quadrotor_launch)/launch/sim_rviz.launch" if="$(arg sim)">
      <arg name="uav_name" value="$(arg uav_name)"/>
      <arg name="uav_type" value="$(arg uav_type)"/>
      <arg name="mass" value="$(arg mass)"/>
      <arg name="world_frame_id" value="$(arg world_frame_id)"/>
      <arg name="initial_position/x" value="$(arg initial_position/x)"/>
      <arg name="initial_position/y" value="$(arg initial_position/y)"/>
      <arg name="initial_position/z" value="$(arg initial_position/z)"/>
      <arg name="color/r" value="$(arg color/r)"/>
      <arg name="color/g" value="$(arg color/g)"/>
      <arg name="color/b" value="$(arg color/b)"/>
      <arg name="color/a" value="$(arg color/a)"/>
    </include> -->

    <!-- Serial communication for real robot -->
    <include file="$(find kr_mav_launch)/launch/asctec_comms.launch" unless="$(arg sim)">
      <arg name="device" value="/dev/ttyUSB0"/>
      <arg name="slow_baud_rate" value="$(arg slow_baud_rate)"/>
      <arg name="nodelet_manager_name" value="$(arg nodelet_manager_name)"/>
    </include>

    <node pkg="kr_trackers" type="waypoints_to_action.py" name="waypoints_to_action" output="screen"/>
  </group>

</launch>